/**
 * This file auto-generated by Fern from our API Definition.
 */

import { RavenApi } from "../../..";
import * as core from "../../../core";
import * as schemas from "../..";

export const ProviderOverride: core.schemas.ObjectSchema<ProviderOverride.Raw, RavenApi.event.ProviderOverride> =
  core.schemas.object({
    payload: core.schemas.record(core.schemas.string(), core.schemas.unknown()),
    formParams: core.schemas.property(
      "form_params",
      core.schemas.list(core.schemas.lazyObject(() => schemas.event.Param))
    ),
    queryParams: core.schemas.property(
      "query_params",
      core.schemas.list(core.schemas.lazyObject(() => schemas.event.Param))
    ),
    pathParams: core.schemas.property(
      "path_params",
      core.schemas.list(core.schemas.lazyObject(() => schemas.event.Param))
    ),
    headers: core.schemas.list(core.schemas.lazyObject(() => schemas.event.Param)),
  });

export declare namespace ProviderOverride {
  interface Raw {
    payload: Record<string, unknown>;
    form_params: schemas.event.Param.Raw[];
    query_params: schemas.event.Param.Raw[];
    path_params: schemas.event.Param.Raw[];
    headers: schemas.event.Param.Raw[];
  }
}
