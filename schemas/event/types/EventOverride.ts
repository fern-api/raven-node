/**
 * This file auto-generated by Fern from our API Definition.
 */

import { RavenApi } from "../../..";
import * as core from "../../../core";
import * as schemas from "../..";

export const EventOverride: core.schemas.ObjectSchema<EventOverride.Raw, RavenApi.event.EventOverride> =
  core.schemas.object({
    email: core.schemas.lazyObject(() => schemas.event.EmailOverride).optional(),
    sms: core.schemas.lazyObject(() => schemas.event.SmsOverride).optional(),
    whatsapp: core.schemas.lazyObject(() => schemas.event.WhatsappOverride).optional(),
    push: core.schemas.lazyObject(() => schemas.event.PushOverride).optional(),
    webhook: core.schemas.lazyObject(() => schemas.event.WebhookOverride).optional(),
    voice: core.schemas.lazyObject(() => schemas.event.VoiceOverride).optional(),
    slack: core.schemas.lazyObject(() => schemas.event.SlackOverride).optional(),
    inApp: core.schemas.property("in_app", core.schemas.lazyObject(() => schemas.event.InAppOverride).optional()),
    telegram: core.schemas.lazyObject(() => schemas.event.TelegramOverride).optional(),
    providers: core.schemas.record(
      core.schemas.string(),
      core.schemas.lazyObject(() => schemas.event.ProviderOverride)
    ),
  });

export declare namespace EventOverride {
  interface Raw {
    email?: schemas.event.EmailOverride.Raw | null;
    sms?: schemas.event.SmsOverride.Raw | null;
    whatsapp?: schemas.event.WhatsappOverride.Raw | null;
    push?: schemas.event.PushOverride.Raw | null;
    webhook?: schemas.event.WebhookOverride.Raw | null;
    voice?: schemas.event.VoiceOverride.Raw | null;
    slack?: schemas.event.SlackOverride.Raw | null;
    in_app?: schemas.event.InAppOverride.Raw | null;
    telegram?: schemas.event.TelegramOverride.Raw | null;
    providers: Record<string, schemas.event.ProviderOverride.Raw>;
  }
}
