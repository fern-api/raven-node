/**
 * This file auto-generated by Fern from our API Definition.
 */

import * as core from "../core";
import { Client as DeviceServiceClient } from "./device/client/Client";
import { Client as EventServiceClient } from "./event/client/Client";
import { Client as UserServiceClient } from "./user/client/Client";

export namespace Client {
  export interface Options {
    _origin: string;
    authorization?: core.Supplier<string>;
  }
}

export class Client {
  constructor(private readonly options: Client.Options) {}

  #device: DeviceServiceClient | undefined;

  public get device(): DeviceServiceClient {
    return (this.#device ??= new DeviceServiceClient({
      _origin: this.options._origin,
      authorization: this.options.authorization,
    }));
  }

  #event: EventServiceClient | undefined;

  public get event(): EventServiceClient {
    return (this.#event ??= new EventServiceClient({
      _origin: this.options._origin,
      authorization: this.options.authorization,
    }));
  }

  #user: UserServiceClient | undefined;

  public get user(): UserServiceClient {
    return (this.#user ??= new UserServiceClient({
      _origin: this.options._origin,
      authorization: this.options.authorization,
    }));
  }
}
