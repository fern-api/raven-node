/**
 * This file auto-generated by Fern from our API Definition.
 */

export interface Channel<RawValue extends Channel.RawValue = Channel.RawValue> {
  toString: () => RawValue;
  visit: <Result>(visitor: Channel._Visitor<Result>) => Result;
}

const _Voice: Channel<"VOICE"> = {
  toString: () => "VOICE",
  visit: (visitor) => visitor.voice(),
};
const _Push: Channel<"PUSH"> = {
  toString: () => "PUSH",
  visit: (visitor) => visitor.push(),
};
const _Sms: Channel<"SMS"> = {
  toString: () => "SMS",
  visit: (visitor) => visitor.sms(),
};
const _Email: Channel<"EMAIL"> = {
  toString: () => "EMAIL",
  visit: (visitor) => visitor.email(),
};
const _Whatsapp: Channel<"WHATSAPP"> = {
  toString: () => "WHATSAPP",
  visit: (visitor) => visitor.whatsapp(),
};
const _Webhook: Channel<"WEBHOOK"> = {
  toString: () => "WEBHOOK",
  visit: (visitor) => visitor.webhook(),
};
const _Slack: Channel<"SLACK"> = {
  toString: () => "SLACK",
  visit: (visitor) => visitor.slack(),
};
const _InApp: Channel<"IN_APP"> = {
  toString: () => "IN_APP",
  visit: (visitor) => visitor.inApp(),
};
const _Telegram: Channel<"TELEGRAM"> = {
  toString: () => "TELEGRAM",
  visit: (visitor) => visitor.telegram(),
};
export const Channel = {
  Voice: _Voice,
  Push: _Push,
  Sms: _Sms,
  Email: _Email,
  Whatsapp: _Whatsapp,
  Webhook: _Webhook,
  Slack: _Slack,
  InApp: _InApp,
  Telegram: _Telegram,
} as const;

export declare namespace Channel {
  type RawValue =
    | "VOICE"
    | "PUSH"
    | "SMS"
    | "EMAIL"
    | "WHATSAPP"
    | "WEBHOOK"
    | "SLACK"
    | "IN_APP"
    | "TELEGRAM"
    | string;

  interface _Visitor<Result> {
    voice: () => Result;
    push: () => Result;
    sms: () => Result;
    email: () => Result;
    whatsapp: () => Result;
    webhook: () => Result;
    slack: () => Result;
    inApp: () => Result;
    telegram: () => Result;
    _other: (value: string) => Result;
  }
}
