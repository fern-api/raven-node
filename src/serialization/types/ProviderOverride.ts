/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import { RavenApi } from "@ravenapp/raven";
import * as core from "../../core";

export const ProviderOverride: core.serialization.ObjectSchema<
    serializers.ProviderOverride.Raw,
    RavenApi.ProviderOverride
> = core.serialization.object({
    payload: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
    formParams: core.serialization.property(
        "form_params",
        core.serialization.list(core.serialization.lazyObject(async () => (await import("..")).Param))
    ),
    queryParams: core.serialization.property(
        "query_params",
        core.serialization.list(core.serialization.lazyObject(async () => (await import("..")).Param))
    ),
    pathParams: core.serialization.property(
        "path_params",
        core.serialization.list(core.serialization.lazyObject(async () => (await import("..")).Param))
    ),
    headers: core.serialization.list(core.serialization.lazyObject(async () => (await import("..")).Param)),
});

export declare namespace ProviderOverride {
    interface Raw {
        payload: Record<string, unknown>;
        form_params: serializers.Param.Raw[];
        query_params: serializers.Param.Raw[];
        path_params: serializers.Param.Raw[];
        headers: serializers.Param.Raw[];
    }
}
